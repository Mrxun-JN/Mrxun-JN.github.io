<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MrXunのBlog</title>
  
  <subtitle>欢迎光临</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://mrxun.in/"/>
  <updated>2020-05-09T13:46:21.176Z</updated>
  <id>https://mrxun.in/</id>
  
  <author>
    <name>Mr.Xun</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>how_create_photos_page</title>
    <link href="https://mrxun.in/2020/05/09/how_create_photos_page/"/>
    <id>https://mrxun.in/2020/05/09/how_create_photos_page/</id>
    <published>2020-05-09T12:20:00.000Z</published>
    <updated>2020-05-09T13:46:21.176Z</updated>
    
    <content type="html"><![CDATA[<p>在博客中记录你的回忆，过程是如此的艰难 QAQ</p><a id="more"></a><h2 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h2><ol><li>你需要 <code>python</code>,以及下载<code>python</code>的插件工具<code>pip</code>；</li><li>一个<code>码云</code>账号或者<code>github</code>账号。</li></ol><h2 id="创建相册文件夹（远程）"><a href="#创建相册文件夹（远程）" class="headerlink" title="创建相册文件夹（远程）"></a>创建相册文件夹（远程）</h2><p>在你的码云或者<code>github</code>账号下新建一个仓库，名字任意，但是记住一定要是公开的仓库，否则博客中无法正常显示。并在改仓库中新建两个文件夹<code>photo</code>和<code>mini_photo</code>。</p><blockquote><p><code>photo</code>文件夹中存放的是照片原图，而<code>mini_photo</code>中存放的是照片的略缩图</p><p>照片的命名方式请按照<code>yyyy-MM-dd_图片描述.png/jpg</code>的格式，方便管理以及程序对照片进行处理</p></blockquote><h3 id="对照片进行处理"><a href="#对照片进行处理" class="headerlink" title="对照片进行处理"></a>对照片进行处理</h3><p>在本地博客的上级目录中存放本地相册，在<code>博客/source</code>文件夹中新建<code>photos</code>目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span>  你的git仓库</span><br></pre></td></tr></table></figure><p>这里我们采用<code>python</code>脚本对照片进行处理，将脚本放在本地相册文件夹中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding: utf-8</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> ImageProcess <span class="keyword">import</span> Graphics</span><br><span class="line"><span class="comment"># 定义压缩比，数值越大，压缩越小</span></span><br><span class="line">SIZE_normal = <span class="number">1.0</span></span><br><span class="line">SIZE_small = <span class="number">1.5</span></span><br><span class="line">SIZE_more_small = <span class="number">2.0</span></span><br><span class="line">SIZE_more_small_small = <span class="number">3.0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">make_directory</span><span class="params">(directory)</span>:</span></span><br><span class="line">    <span class="string">"""创建目录"""</span></span><br><span class="line">    os.makedirs(directory)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">directory_exists</span><span class="params">(directory)</span>:</span></span><br><span class="line">    <span class="string">"""判断目录是否存在"""</span></span><br><span class="line">    <span class="keyword">if</span> os.path.exists(directory):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">list_img_file</span><span class="params">(directory)</span>:</span></span><br><span class="line">    <span class="string">"""列出目录下所有文件，并筛选出图片文件列表返回"""</span></span><br><span class="line">    old_list = sorted(os.listdir(directory), reverse=<span class="literal">True</span>)</span><br><span class="line">    print(old_list)</span><br><span class="line">    new_list = []</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> old_list:</span><br><span class="line">        name, fileformat = filename.split(<span class="string">"."</span>)</span><br><span class="line">        <span class="keyword">if</span> fileformat.lower() == <span class="string">"jpg"</span> <span class="keyword">or</span> fileformat.lower() == <span class="string">"png"</span> <span class="keyword">or</span> fileformat.lower() == <span class="string">"gif"</span> <span class="keyword">or</span> fileformat.lower() == <span class="string">"jpeg"</span>:</span><br><span class="line">            new_list.append(filename)</span><br><span class="line">    <span class="comment"># print new_list</span></span><br><span class="line">    <span class="keyword">return</span> new_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_help</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"""</span></span><br><span class="line"><span class="string">    This program helps compress many image files</span></span><br><span class="line"><span class="string">    you can choose which scale you want to compress your img(jpg/png/etc)</span></span><br><span class="line"><span class="string">    1) normal compress(4M to 1M around)</span></span><br><span class="line"><span class="string">    2) small compress(4M to 500K around)</span></span><br><span class="line"><span class="string">    3) smaller compress(4M to 300K around)</span></span><br><span class="line"><span class="string">    """</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compress</span><span class="params">(choose, des_dir, src_dir, file_list)</span>:</span></span><br><span class="line">    <span class="string">"""压缩算法，img.thumbnail对图片进行压缩，</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    参数</span></span><br><span class="line"><span class="string">    -----------</span></span><br><span class="line"><span class="string">    choose: str</span></span><br><span class="line"><span class="string">            选择压缩的比例，有4个选项，越大压缩后的图片越小</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">'1'</span>:</span><br><span class="line">        scale = SIZE_normal</span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">'2'</span>:</span><br><span class="line">        scale = SIZE_small</span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">'3'</span>:</span><br><span class="line">        scale = SIZE_more_small</span><br><span class="line">    <span class="keyword">if</span> choose == <span class="string">'4'</span>:</span><br><span class="line">        scale = SIZE_more_small_small</span><br><span class="line">    <span class="keyword">for</span> infile <span class="keyword">in</span> file_list:</span><br><span class="line">        img = Image.open(src_dir+infile)</span><br><span class="line">        <span class="comment"># size_of_file = os.path.getsize(infile)</span></span><br><span class="line">        w, h = img.size</span><br><span class="line">        img.thumbnail((int(w/scale), int(h/scale)))</span><br><span class="line">        img.save(des_dir + infile)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">compress_photo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''调用压缩图片的函数</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    src_dir, des_dir = <span class="string">"photos/"</span>, <span class="string">"min_photos/"</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> directory_exists(src_dir):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> directory_exists(src_dir):</span><br><span class="line">            make_directory(src_dir)</span><br><span class="line">        <span class="comment"># business logic</span></span><br><span class="line">        file_list_src = list_img_file(src_dir)</span><br><span class="line">    <span class="keyword">if</span> directory_exists(des_dir):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> directory_exists(des_dir):</span><br><span class="line">            make_directory(des_dir)</span><br><span class="line">        file_list_des = list_img_file(des_dir)</span><br><span class="line">        <span class="comment"># print file_list</span></span><br><span class="line">    <span class="string">'''如果已经压缩了，就不再压缩'''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(file_list_des)):</span><br><span class="line">        <span class="keyword">if</span> file_list_des[i] <span class="keyword">in</span> file_list_src:</span><br><span class="line">            file_list_src.remove(file_list_des[i])</span><br><span class="line">    compress(<span class="string">'4'</span>, des_dir, src_dir, file_list_src)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handle_photo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''根据图片的文件名处理成需要的json格式的数据</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    -----------</span></span><br><span class="line"><span class="string">    最后将data.json文件存到博客的source/photos文件夹下</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    src_dir, des_dir = <span class="string">"photos/"</span>, <span class="string">"min_photos/"</span></span><br><span class="line">    file_list = list_img_file(src_dir)</span><br><span class="line">    print(file_list)</span><br><span class="line">    list_info = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(file_list)):</span><br><span class="line">        filename = file_list[i]</span><br><span class="line">        date_str, info = filename.split(<span class="string">"_"</span>)</span><br><span class="line">        info, _ = info.split(<span class="string">"."</span>)</span><br><span class="line">        date = datetime.strptime(date_str, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">        year_month = date_str[<span class="number">0</span>:<span class="number">7</span>]            </span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:  <span class="comment"># 处理第一个文件</span></span><br><span class="line">            new_dict = &#123;<span class="string">"date"</span>: year_month, <span class="string">"arr"</span>:&#123;<span class="string">'year'</span>: date.year,</span><br><span class="line">                                                                   <span class="string">'month'</span>: date.month,</span><br><span class="line">                                                                   <span class="string">'link'</span>: [filename],</span><br><span class="line">                                                                   <span class="string">'text'</span>: [info],</span><br><span class="line">                                                                   <span class="string">'type'</span>: [<span class="string">'image'</span>]</span><br><span class="line">                                                                   &#125;</span><br><span class="line">                                        &#125; </span><br><span class="line">            list_info.append(new_dict)</span><br><span class="line">        <span class="keyword">elif</span> year_month != list_info[<span class="number">-1</span>][<span class="string">'date'</span>]:  <span class="comment"># 不是最后的一个日期，就新建一个dict</span></span><br><span class="line">            new_dict = &#123;<span class="string">"date"</span>: year_month, <span class="string">"arr"</span>:&#123;<span class="string">'year'</span>: date.year,</span><br><span class="line">                                                   <span class="string">'month'</span>: date.month,</span><br><span class="line">                                                   <span class="string">'link'</span>: [filename],</span><br><span class="line">                                                   <span class="string">'text'</span>: [info],</span><br><span class="line">                                                   <span class="string">'type'</span>: [<span class="string">'image'</span>]</span><br><span class="line">                                                   &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">            list_info.append(new_dict)</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 同一个日期</span></span><br><span class="line">            list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'link'</span>].append(filename)</span><br><span class="line">            list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'text'</span>].append(info)</span><br><span class="line">            list_info[<span class="number">-1</span>][<span class="string">'arr'</span>][<span class="string">'type'</span>].append(<span class="string">'image'</span>)</span><br><span class="line">    list_info.reverse()  <span class="comment"># 翻转</span></span><br><span class="line">    tmp = bubbleYear(list_info)</span><br><span class="line">    bubble(tmp)</span><br><span class="line">    final_dict = &#123;<span class="string">"list"</span>: list_info&#125;</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">"../hexoBlog/source/photos/data.json"</span>,<span class="string">"w"</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        json.dump(final_dict, fp)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cut_photo</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">"""裁剪算法</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    ----------</span></span><br><span class="line"><span class="string">    调用Graphics类中的裁剪算法，将src_dir目录下的文件进行裁剪（裁剪成正方形）</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    src_dir = <span class="string">"photos/"</span></span><br><span class="line">    <span class="keyword">if</span> directory_exists(src_dir):</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> directory_exists(src_dir):</span><br><span class="line">            make_directory(src_dir)</span><br><span class="line">        <span class="comment"># business logic</span></span><br><span class="line">        file_list = list_img_file(src_dir)</span><br><span class="line">        <span class="comment"># print file_list</span></span><br><span class="line">        <span class="keyword">if</span> file_list:</span><br><span class="line">            print_help()</span><br><span class="line">            <span class="keyword">for</span> infile <span class="keyword">in</span> file_list:</span><br><span class="line">                img = Image.open(src_dir+infile)</span><br><span class="line">                img = img.convert(<span class="string">'RGB'</span>)</span><br><span class="line">                Graphics(infile=src_dir+infile, outfile=src_dir + infile).cut_by_ratio()            </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"source directory not exist!"</span>)     </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">git_operation</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    git 命令行函数，将仓库提交</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    ----------</span></span><br><span class="line"><span class="string">    需要安装git命令行工具，并且添加到环境变量中</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    os.system(<span class="string">'git add --all'</span>)</span><br><span class="line">    os.system(<span class="string">'git commit -m "add photos"'</span>)</span><br><span class="line">    os.system(<span class="string">'git push origin master'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble</span><span class="params">(bubbleList)</span>:</span></span><br><span class="line">    listLength = len(bubbleList)</span><br><span class="line">    <span class="keyword">while</span> listLength &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(listLength - <span class="number">1</span>):    <span class="comment"># 这个循环负责设置冒泡排序进行的次数</span></span><br><span class="line">            <span class="comment"># print(bubbleList[i])</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(listLength-i<span class="number">-1</span>):  <span class="comment"># ｊ为列表下标</span></span><br><span class="line">                <span class="keyword">if</span>(bubbleList[j].get(<span class="string">'arr'</span>).get(<span class="string">'year'</span>) == bubbleList[j+<span class="number">1</span>].get(<span class="string">'arr'</span>).get(<span class="string">'year'</span>)):</span><br><span class="line">                    <span class="keyword">if</span> bubbleList[j].get(<span class="string">'arr'</span>).get(<span class="string">'month'</span>) &lt; bubbleList[j+<span class="number">1</span>].get(<span class="string">'arr'</span>).get(<span class="string">'month'</span>):</span><br><span class="line">                </span><br><span class="line">                        bubbleList[j], bubbleList[j+<span class="number">1</span>] = bubbleList[j+<span class="number">1</span>], bubbleList[j]</span><br><span class="line">        <span class="keyword">return</span> bubbleList</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">        <span class="comment"># for i in range(listLength - 1):</span></span><br><span class="line">        <span class="comment">#     if(bubbleList[i].get('arr').get('year') == bubbleList[i+1].get('arr').get('year')):</span></span><br><span class="line">        <span class="comment">#         if bubbleList[i].get('arr').get('month') &gt; bubbleList[i+1].get('arr').get('month'):</span></span><br><span class="line">        <span class="comment">#             bubbleList[i] = bubbleList[i] + bubbleList[i+1]</span></span><br><span class="line">        <span class="comment">#             bubbleList[i+1] = bubbleList[i] - bubbleList[i+1]</span></span><br><span class="line">        <span class="comment">#             bubbleList[i] = bubbleList[i] - bubbleList[i+1]</span></span><br><span class="line">        <span class="comment"># listLength -= 1</span></span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubbleYear</span><span class="params">(bubbleList)</span>:</span></span><br><span class="line">    listLength = len(bubbleList)</span><br><span class="line">    <span class="keyword">while</span> listLength &gt; <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(listLength - <span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(listLength-i<span class="number">-1</span>):</span><br><span class="line">                <span class="keyword">if</span> bubbleList[j].get(<span class="string">'arr'</span>).get(<span class="string">'year'</span>) &lt; bubbleList[j+<span class="number">1</span>].get(<span class="string">'arr'</span>).get(<span class="string">'year'</span>):</span><br><span class="line">                    </span><br><span class="line">                    bubbleList[j], bubbleList[j+<span class="number">1</span>] = bubbleList[j+<span class="number">1</span>], bubbleList[j]</span><br><span class="line">        <span class="comment"># print(bubbleList)</span></span><br><span class="line">        <span class="keyword">return</span> bubbleList</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    cut_photo()        <span class="comment"># 裁剪图片，裁剪成正方形，去中间部分</span></span><br><span class="line">    compress_photo()   <span class="comment"># 压缩图片，并保存到mini_photos文件夹下</span></span><br><span class="line">    git_operation()    <span class="comment"># 提交到github仓库</span></span><br><span class="line">    handle_photo()     <span class="comment"># 将文件处理成json格式，存到博客仓库中</span></span><br></pre></td></tr></table></figure><p>其中文件中的内容进行修改，将<code>../hexoBlog/source/photos/data.json</code> 改为你自己的本地博客地址<br>还需要一个额外的<code>python</code>脚本<code>ImageProcess.py</code>（上网搜了好久都没有，后面找到了源代码赶紧保存了下来）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8  </span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image  </span><br><span class="line"><span class="keyword">import</span> shutil  </span><br><span class="line"><span class="keyword">import</span> os  </span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Graphics</span>:</span>  </span><br><span class="line">    <span class="string">''' 图片处理类</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    参数</span></span><br><span class="line"><span class="string">    -------</span></span><br><span class="line"><span class="string">    infile: 输入文件路径</span></span><br><span class="line"><span class="string">    outfile: 输出文件路径</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, infile, outfile)</span>:</span></span><br><span class="line">        self.infile = infile</span><br><span class="line">        self.outfile = outfile</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fixed_size</span><span class="params">(self, width, height)</span>:</span>  </span><br><span class="line">        <span class="string">"""按照固定尺寸处理图片"""</span>  </span><br><span class="line">        im = Image.open(self.infile)  </span><br><span class="line">        out = im.resize((width, height),Image.ANTIALIAS)  </span><br><span class="line">        out.save(self.outfile)  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resize_by_width</span><span class="params">(self, w_divide_h)</span>:</span>  </span><br><span class="line">        <span class="string">"""按照宽度进行所需比例缩放"""</span>  </span><br><span class="line">        im = Image.open(self.infile)  </span><br><span class="line">        (x, y) = im.size   </span><br><span class="line">        x_s = x  </span><br><span class="line">        y_s = x/w_divide_h  </span><br><span class="line">        out = im.resize((x_s, y_s), Image.ANTIALIAS)   </span><br><span class="line">        out.save(self.outfile)  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resize_by_height</span><span class="params">(self, w_divide_h)</span>:</span>  </span><br><span class="line">        <span class="string">"""按照高度进行所需比例缩放"""</span>  </span><br><span class="line">        im = Image.open(self.infile)  </span><br><span class="line">        (x, y) = im.size   </span><br><span class="line">        x_s = y*w_divide_h  </span><br><span class="line">        y_s = y  </span><br><span class="line">        out = im.resize((x_s, y_s), Image.ANTIALIAS)   </span><br><span class="line">        out.save(self.outfile)  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">resize_by_size</span><span class="params">(self, size)</span>:</span>  </span><br><span class="line">        <span class="string">"""按照生成图片文件大小进行处理 (单位 KB)"""</span>  </span><br><span class="line">        size *= <span class="number">1024</span>  </span><br><span class="line">        im = Image.open(self.infile)  </span><br><span class="line">        size_tmp = os.path.getsize(self.infile)  </span><br><span class="line">        q = <span class="number">100</span>  </span><br><span class="line">        <span class="keyword">while</span> size_tmp &gt; size <span class="keyword">and</span> q &gt; <span class="number">0</span>:  </span><br><span class="line">            <span class="keyword">print</span> (q)  </span><br><span class="line">            out = im.resize(im.size, Image.ANTIALIAS)  </span><br><span class="line">            out.save(self.outfile, quality=q)  </span><br><span class="line">            size_tmp = os.path.getsize(self.outfile)  </span><br><span class="line">            q -= <span class="number">5</span>  </span><br><span class="line">        <span class="keyword">if</span> q == <span class="number">100</span>:  </span><br><span class="line">            shutil.copy(self.infile, self.outfile)  </span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cut_by_ratio</span><span class="params">(self)</span>:</span>  </span><br><span class="line">        <span class="string">""" 按照图片长宽进行分割</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">        ------------</span></span><br><span class="line"><span class="string">        取中间的部分，裁剪成正方形</span></span><br><span class="line"><span class="string">        """</span>  </span><br><span class="line">        im = Image.open(self.infile)  </span><br><span class="line">        (x, y) = im.size  </span><br><span class="line">        <span class="keyword">if</span> x &gt; y:  </span><br><span class="line">            region = (int(x/<span class="number">2</span>-y/<span class="number">2</span>), <span class="number">0</span>, int(x/<span class="number">2</span>+y/<span class="number">2</span>), y)  </span><br><span class="line">            <span class="comment">#裁切图片  </span></span><br><span class="line">            crop_img = im.crop(region)  </span><br><span class="line">            <span class="comment">#保存裁切后的图片  </span></span><br><span class="line">            crop_img.save(self.outfile)             </span><br><span class="line">        <span class="keyword">elif</span> x &lt; y:  </span><br><span class="line">            region = (<span class="number">0</span>, int(y/<span class="number">2</span>-x/<span class="number">2</span>), x, int(y/<span class="number">2</span>+x/<span class="number">2</span>))</span><br><span class="line">            <span class="comment">#裁切图片  </span></span><br><span class="line">            crop_img = im.crop(region)  </span><br><span class="line">            <span class="comment">#保存裁切后的图片  </span></span><br><span class="line">            crop_img.save(self.outfile)</span><br></pre></td></tr></table></figure><p>在运行之前还需要安装<code>python</code>插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install Pillow</span><br></pre></td></tr></table></figure><p>将这两个文件都放在照片的文件夹里，运行脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python imageDeal.py</span><br></pre></td></tr></table></figure><p>执行完后重新<code>git</code>到远程仓库</p><blockquote><p>如果提示缺少什么库，请自行使用<code>pip</code>安装即可</p></blockquote><p>上面两个文件若是出错，可以到我的<a href="https://gitee.com/mrxun_jn/photosStores" target="_blank" rel="noopener">码云</a>中下载</p><p>运行完成后会在<code>你的博客目录/source/photos</code>中出现<code>data.json</code></p><h2 id="修改-Next-主题中的配置"><a href="#修改-Next-主题中的配置" class="headerlink" title="修改 Next 主题中的配置"></a>修改 Next 主题中的配置</h2><h3 id="增加相册-style"><a href="#增加相册-style" class="headerlink" title="增加相册 style"></a>增加相册 style</h3><p>在 next 主题目录<code>next/layout</code>下面增加 photo.swig 页面</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends <span class="string">'_layout.swig'</span> %&#125;</span><br><span class="line">&#123;% <span class="keyword">import</span> <span class="string">'_macro/post-collapse.swig'</span> <span class="keyword">as</span> post_template %&#125;</span><br><span class="line">&#123;% <span class="keyword">import</span> <span class="string">'_macro/sidebar.swig'</span> <span class="keyword">as</span> sidebar_template %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block title %&#125;&#123;&#123; page.title &#125;&#125; | &#123;&#123; config.title &#125;&#125;&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block content %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;#################&#125;</span><br><span class="line">  &#123;### Photo BLOCK ###&#125;</span><br><span class="line">  &#123;#################&#125;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-block photo"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div id=<span class="string">"posts"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"posts-collapse"</span>&gt;</span><br><span class="line">      </span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">  </span><br><span class="line">  &#123;#####################&#125;</span><br><span class="line">  &#123;### END Photo BLOCK ###&#125;</span><br><span class="line">  &#123;#####################&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% include <span class="string">'_partials/pagination.swig'</span> %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% block sidebar %&#125;</span><br><span class="line">  &#123;&#123; sidebar_template.render(<span class="literal">false</span>) &#125;&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h3 id="生成相册页面"><a href="#生成相册页面" class="headerlink" title="生成相册页面"></a>生成相册页面</h3><p>生成相册页面和生成分类和标签页面一样</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page photos</span><br></pre></td></tr></table></figure><p>修改<code>博客/source/photos/index.md</code></p><figure class="highlight htmlbars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./ins.css"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./photoswipe.css"</span>&gt;</span> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"./default-skin/default-skin.css"</span>&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"photos-btn-wrap"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"photos-btn active"</span> <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span>&gt;</span>照片美如画<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"instagram itemscope"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    http://localhost:4000/mrxun" target="_blank" class="open-ins"&gt;图片正在加载中…</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">  (function() &#123;</span></span><br><span class="line"><span class="xml">    var loadScript = function(path) &#123;</span></span><br><span class="line"><span class="xml">      var $script = document.createElement('script')</span></span><br><span class="line"><span class="xml">      document.getElementsByTagName('body')[0].appendChild($script)</span></span><br><span class="line"><span class="xml">      $script.setAttribute('src', path)</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml">    setTimeout(function() &#123;</span></span><br><span class="line"><span class="xml">        loadScript('./ins.js')</span></span><br><span class="line"><span class="xml">    &#125;, 0)</span></span><br><span class="line"><span class="xml">  &#125;)()</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>将其中的网址<code>http://localhost:4000/mrxun</code>换成你自己的域名</p><p>另外还需要三个<code>css</code>，以及<code>js</code></p><blockquote><p>photoswipe.css<br>ins.css<br>default-skin/default-skin.css(新建文件夹后在放入<code>css</code>文件)<br>ins.js</p></blockquote><p>这些文件我也放在<a href="https://gitee.com/mrxun_jn/photosStores" target="_blank" rel="noopener">码云</a>中</p><h3 id="添加查看相册插件-photoswipe"><a href="#添加查看相册插件-photoswipe" class="headerlink" title="添加查看相册插件 photoswipe"></a>添加查看相册插件 photoswipe</h3><p>在<code>/theme/next/source/js</code>中添加<code>photoswipe.min.js</code> 和 <code>photoswipe-ui-default.min.js</code>，这两个文件可以在<a href="https://github.com/dimsemenov/PhotoSwipe/tree/master/dist" target="_blank" rel="noopener">github</a>上下载</p><p>在 <code>/theme/next/layout/_scripts/pages/post-details.swig</code> 中插入以下两行（没有的话直接新建即可）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"&#123;&#123; url_for(theme.js) &#125;&#125;/src/photoswipe.min.js?v=&#123;&#123; theme.version &#125;&#125;"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="&#123;&#123; url_for(theme.js) &#125;&#125;/</span>src/photoswipe-ui-<span class="keyword">default</span>.min.js?v=&#123;&#123; theme.version &#125;&#125;<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>在 <code>/theme/next/layout/_layout.swig</code>的<code>head</code>标签中添加下面几行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> page.type === <span class="string">"photos"</span> %&#125;</span><br><span class="line">&lt;!-- Root element <span class="keyword">of</span> PhotoSwipe. Must have <span class="class"><span class="keyword">class</span> <span class="title">pswp</span>. --&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span></span>=<span class="string">"pswp"</span> tabindex=<span class="string">"-1"</span> role=<span class="string">"dialog"</span> aria-hidden=<span class="string">"true"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pswp__bg"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div class="pswp__scroll-wrap"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="pswp__container"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="pswp__item"&gt;&lt;/</span>div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"pswp__item"</span>&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="pswp__item"&gt;&lt;/</span>div&gt;</span><br><span class="line">        &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">        &lt;div class="pswp__ui pswp__ui--hidden"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;div class="pswp__top-bar"&gt;</span></span><br><span class="line"><span class="regexp">                &lt;div class="pswp__counter"&gt;&lt;/</span>div&gt;</span><br><span class="line">                &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"pswp__button pswp__button--close"</span> title=<span class="string">"Close (Esc)"</span>&gt;&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">                &lt;button class="pswp__button pswp__button--share" title="Share"&gt;&lt;/</span>button&gt;</span><br><span class="line">                &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"pswp__button pswp__button--fs"</span> title=<span class="string">"Toggle fullscreen"</span>&gt;&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">                &lt;button class="pswp__button pswp__button--zoom" title="Zoom in/</span>out<span class="string">"&gt;&lt;/button&gt;</span></span><br><span class="line"><span class="string">                </span></span><br><span class="line"><span class="string">                &lt;!-- element will get class pswp__preloader--active when preloader is running --&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="</span>pswp__preloader<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                    &lt;div class="</span>pswp__preloader__icn<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                      &lt;div class="</span>pswp__preloader__cut<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                        &lt;div class="</span>pswp__preloader__donut<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                      &lt;/div&gt;</span></span><br><span class="line"><span class="string">                    &lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span>pswp__share-modal pswp__share-modal--hidden pswp__single-tap<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="</span>pswp__share-tooltip<span class="string">"&gt;&lt;/div&gt; </span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;button class="</span>pswp__button pswp__button--arrow--left<span class="string">" title="</span>Previous (arrow left)<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;button class="</span>pswp__button pswp__button--arrow--right<span class="string">" title="</span>Next (arrow right)<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &lt;/button&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="</span>pswp__caption<span class="string">"&gt;</span></span><br><span class="line"><span class="string">                &lt;div class="</span>pswp__caption__center<span class="string">"&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure><p>至此相册查看插件 <code>photoswipe</code> 已经配置完毕</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>我们回顾以下整个流程</p><ol><li>远程仓库 <code>photos</code></li><li>本地文件夹，从远程仓库 <code>git clone</code></li><li>博客中新建<code>photos</code> 页面</li><li>执行<code>python</code>脚本处理照片</li><li>重新提交到<code>github</code>或<code>码云</code>上</li><li>修改<code>博客/source/photos</code>中的<code>index.md</code>，以及添加<code>css</code>和<code>js</code>文件</li><li>修改<code>主题/layout</code>文件夹中的一些文件</li><li>在<code>主题/source/js</code>文件夹中添加<code>js</code>文件</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在博客中记录你的回忆，过程是如此的艰难 QAQ&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Next" scheme="https://mrxun.in/tags/Next/"/>
    
      <category term="博客美化" scheme="https://mrxun.in/tags/%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    
      <category term="python" scheme="https://mrxun.in/tags/python/"/>
    
      <category term="hexo" scheme="https://mrxun.in/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>感谢相识，不计消失</title>
    <link href="https://mrxun.in/2020/04/29/hello-world/"/>
    <id>https://mrxun.in/2020/04/29/hello-world/</id>
    <published>2020-04-29T02:04:19.045Z</published>
    <updated>2020-04-29T02:04:19.021Z</updated>
    
    <content type="html"><![CDATA[<p>感谢你曾经来过，可是我只是个过客</p><a id="more"></a><p>点开这篇文章的你应该更有兴趣点开 “关于”</p><p>你我的故事或许从这里开始</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;感谢你曾经来过，可是我只是个过客&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="胡言乱语" scheme="https://mrxun.in/tags/%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>优雅的在 deepin 中使用 SSR</title>
    <link href="https://mrxun.in/2020/04/29/use_ssr_in_linux/"/>
    <id>https://mrxun.in/2020/04/29/use_ssr_in_linux/</id>
    <published>2020-04-29T02:00:00.000Z</published>
    <updated>2020-04-29T02:04:50.057Z</updated>
    
    <content type="html"><![CDATA[<p>在 Linux 中使用 SSR,  相较于 Windows 真是太麻烦了<br>不过有我教你，莫要害怕</p><a id="more"></a><h2 id="首先你需要一个机场"><a href="#首先你需要一个机场" class="headerlink" title="首先你需要一个机场"></a>首先你需要一个机场</h2><p>** 如果你需要一个专属于自己的机场，稍后我会发布一篇单独的文章手把手教你 **</p><h3 id="下载-ShadowsocksR"><a href="#下载-ShadowsocksR" class="headerlink" title="下载 ShadowsocksR"></a>下载 ShadowsocksR</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Mrxun-JN/ssr-linux.git</span><br><span class="line">or</span><br><span class="line">wget https://raw.githubusercontent.com/Mrxun-JN/ssr-linux/master/manyuser.zip</span><br></pre></td></tr></table></figure><p>文件较小，不用担心会出现下载过慢的情况</p><h3 id="修改-SSR-配置文件-config-json"><a href="#修改-SSR-配置文件-config-json" class="headerlink" title="修改 SSR 配置文件 config.json"></a>修改 SSR 配置文件 config.json</h3><p>SSR 配置文件路径为 <code>shadowsocks-manyuser/config.json</code>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"xxx.xxx.xxx.xxx"</span>, <span class="comment">// 服务器 IP</span></span><br><span class="line">    <span class="attr">"server_ipv6"</span>: <span class="string">"::"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>: <span class="number">8388</span>, <span class="comment">// 服务器端口</span></span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>: <span class="number">1080</span>, <span class="comment">// 本地端口</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">"password"</span>: <span class="string">"password"</span>, <span class="comment">// 密码</span></span><br><span class="line">    <span class="attr">"method"</span>: <span class="string">"aes-256-cfb"</span>, <span class="comment">// 加密方式</span></span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"auth_aes128_md5"</span>, <span class="comment">// 协议</span></span><br><span class="line">    <span class="attr">"protocol_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"obfs"</span>: <span class="string">"origin"</span>, <span class="comment">// 混淆</span></span><br><span class="line">    <span class="attr">"obfs_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"speed_limit_per_con"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"speed_limit_per_user"</span>: <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">"additional_ports"</span> : &#123;&#125;, <span class="comment">// only works under multi-user mode</span></span><br><span class="line">    <span class="attr">"additional_ports_only"</span> : <span class="literal">false</span>, <span class="comment">// only works under multi-user mode</span></span><br><span class="line">    <span class="attr">"timeout"</span>: <span class="number">120</span>,</span><br><span class="line">    <span class="attr">"udp_timeout"</span>: <span class="number">60</span>,</span><br><span class="line">    <span class="attr">"dns_ipv6"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"connect_verbose_info"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"redirect"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改后面有备注的几项即可</p><h2 id="通过命令行即可使用-SSR"><a href="#通过命令行即可使用-SSR" class="headerlink" title="通过命令行即可使用 SSR"></a>通过命令行即可使用 SSR</h2><p>首先你需要安装 <code>python</code>，一般Linux系统都会预装，如果出现不能运行的错误，自行 <code>google</code> 即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo python ./shadowsocks/local.py -c config.json -d start <span class="comment"># 启动</span></span><br><span class="line">sudo python ./shadowsocks/local.py -c config.json -d stop  <span class="comment"># 停止</span></span><br></pre></td></tr></table></figure><p>到这一步，你是不是以及迫不及待的打开浏览器准备畅想网络世界？<br>其实并不是，<code>Linux</code> 网络配置问题比较复杂，不像在 <code>Windows</code> 下一样，点开即可使用，比如 <code>chrome</code> 浏览器中就需要插件才能遨游世界</p><h2 id="chrome-中使用-SSR"><a href="#chrome-中使用-SSR" class="headerlink" title="chrome 中使用 SSR"></a>chrome 中使用 SSR</h2><p>首先，你需要安装一款插件 <code>Proxy SwitchyOmega</code>，<a href="https://github.com/FelisCatus/SwitchyOmega/releases" target="_blank" rel="noopener">下载地址</a><br>如果你是在 <code>chrome</code> 中直接安装可跳过下面手动安装的步骤</p><h3 id="手动在-chrome-中安装插件"><a href="#手动在-chrome-中安装插件" class="headerlink" title="手动在 chrome 中安装插件"></a>手动在 chrome 中安装插件</h3><ol><li>点开 右上角三个点 &gt; 更多工具 &gt; 扩展程序</li><li>在扩展程序界面右上角打开开发者模式</li><li>将刚才下载好的 <code>.crx</code> 文件直接拖进浏览器即可</li><li>其他插件的安装也是如此</li></ol><h3 id="修改-Proxy-SwitchyOmega-配置"><a href="#修改-Proxy-SwitchyOmega-配置" class="headerlink" title="修改 Proxy SwitchyOmega 配置"></a>修改 Proxy SwitchyOmega 配置</h3><ol><li>点开右上角刚刚安装好的插件 &gt; 选项</li><li>将情景模式中 <code>proxy</code>的代理协议更改为 <code>sock5</code>，代理服务器 <code>127.0.0.1</code>，端口 <code>1080</code></li><li>如果你想所有网页都通过 <code>SSR</code> 的流量，在插件中选择 <code>proxy</code>即可，如果你的机场流量不多的话建议选择 <code>Auto Switch</code></li><li>当然，你可以修改 <code>Auto Switch</code>的规则，使其更好的为你服务</li></ol><h2 id="让-Linux-终端里的命令使用-SSR"><a href="#让-Linux-终端里的命令使用-SSR" class="headerlink" title="让 Linux 终端里的命令使用 SSR"></a>让 Linux 终端里的命令使用 SSR</h2><p>安装完 <code>shadowsock</code>后，你会发现你使用 <code>wget</code>，或者没有更换镜像源的 <code>pip</code>时，速度并没有加快<br>这是因为 <code>shadowsock</code>的流量都走的是本地 <code>1080</code> 端口，而你使用的命令并没有通过端口转发<br>这时我们就需要一个特殊的工具 <code>proxychains</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install proxychains</span><br></pre></td></tr></table></figure><p>安装完成后，修改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/proxychains.conf</span><br><span class="line"><span class="comment">## 修改最后一行</span></span><br><span class="line">socks5  127.0.0.1 1080</span><br><span class="line"><span class="comment">## 保存退出</span></span><br></pre></td></tr></table></figure><p>这时候，你再使用 <code>wget</code>或者其他命令时，只需在前面加上 <code>proxychains</code>，就可以享受代理带来的乐趣咯</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains wget www.google.com</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在 Linux 中使用 SSR,  相较于 Windows 真是太麻烦了&lt;br&gt;不过有我教你，莫要害怕&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="ssr" scheme="https://mrxun.in/tags/ssr/"/>
    
      <category term="酸酸乳" scheme="https://mrxun.in/tags/%E9%85%B8%E9%85%B8%E4%B9%B3/"/>
    
      <category term="技术饭" scheme="https://mrxun.in/tags/%E6%8A%80%E6%9C%AF%E9%A5%AD/"/>
    
  </entry>
  
  <entry>
    <title>开始搭建你自己的hexo</title>
    <link href="https://mrxun.in/2020/04/25/startHexo/"/>
    <id>https://mrxun.in/2020/04/25/startHexo/</id>
    <published>2020-04-25T13:56:08.653Z</published>
    <updated>2020-04-25T13:56:08.617Z</updated>
    
    <content type="html"><![CDATA[<p>一些简单的hexo命令</p><a id="more"></a><h2 id="学习搭建自己的hexo博客"><a href="#学习搭建自己的hexo博客" class="headerlink" title="学习搭建自己的hexo博客"></a>学习搭建自己的hexo博客</h2><h3 id="上传文章"><a href="#上传文章" class="headerlink" title="上传文章"></a>上传文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="启动hexo服务"><a href="#启动hexo服务" class="headerlink" title="启动hexo服务"></a>启动hexo服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="更新静态页面"><a href="#更新静态页面" class="headerlink" title="更新静态页面"></a>更新静态页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><h3 id="上传到码云"><a href="#上传到码云" class="headerlink" title="上传到码云"></a>上传到码云</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一些简单的hexo命令&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术博客" scheme="https://mrxun.in/categories/%E6%8A%80%E6%9C%AF%E5%8D%9A%E5%AE%A2/"/>
    
    
      <category term="hexo" scheme="https://mrxun.in/tags/hexo/"/>
    
      <category term="技术饭" scheme="https://mrxun.in/tags/%E6%8A%80%E6%9C%AF%E9%A5%AD/"/>
    
  </entry>
  
</feed>
