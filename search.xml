<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>感谢相识，不计消失</title>
    <url>/2020/04/29/hello-world/</url>
    <content><![CDATA[<p>感谢你曾经来过，可是我只是个过客</p>
<a id="more"></a>

<p>点开这篇文章的你应该更有兴趣点开 “关于”</p>
<p>你我的故事或许从这里开始</p>
]]></content>
      <tags>
        <tag>胡言乱语</tag>
      </tags>
  </entry>
  <entry>
    <title>优雅的在 deepin 中使用 SSR</title>
    <url>/2020/04/29/use_ssr_in_linux/</url>
    <content><![CDATA[<p>在 Linux 中使用 SSR,  相较于 Windows 真是太麻烦了<br>不过有我教你，莫要害怕</p>
<a id="more"></a>
<h2 id="首先你需要一个机场"><a href="#首先你需要一个机场" class="headerlink" title="首先你需要一个机场"></a>首先你需要一个机场</h2><p>** 如果你需要一个专属于自己的机场，稍后我会发布一篇单独的文章手把手教你 **</p>
<h3 id="下载-ShadowsocksR"><a href="#下载-ShadowsocksR" class="headerlink" title="下载 ShadowsocksR"></a>下载 ShadowsocksR</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Mrxun-JN/ssr-linux.git</span><br><span class="line">or</span><br><span class="line">wget https://raw.githubusercontent.com/Mrxun-JN/ssr-linux/master/manyuser.zip</span><br></pre></td></tr></table></figure>
<p>文件较小，不用担心会出现下载过慢的情况</p>
<h3 id="修改-SSR-配置文件-config-json"><a href="#修改-SSR-配置文件-config-json" class="headerlink" title="修改 SSR 配置文件 config.json"></a>修改 SSR 配置文件 config.json</h3><p>SSR 配置文件路径为 <code>shadowsocks-manyuser/config.json</code>：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"xxx.xxx.xxx.xxx"</span>, <span class="comment">// 服务器 IP</span></span><br><span class="line">    <span class="attr">"server_ipv6"</span>: <span class="string">"::"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>: <span class="number">8388</span>, <span class="comment">// 服务器端口</span></span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line">    <span class="attr">"local_port"</span>: <span class="number">1080</span>, <span class="comment">// 本地端口</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">"password"</span>: <span class="string">"password"</span>, <span class="comment">// 密码</span></span><br><span class="line">    <span class="attr">"method"</span>: <span class="string">"aes-256-cfb"</span>, <span class="comment">// 加密方式</span></span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"auth_aes128_md5"</span>, <span class="comment">// 协议</span></span><br><span class="line">    <span class="attr">"protocol_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"obfs"</span>: <span class="string">"origin"</span>, <span class="comment">// 混淆</span></span><br><span class="line">    <span class="attr">"obfs_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"speed_limit_per_con"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"speed_limit_per_user"</span>: <span class="number">0</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">"additional_ports"</span> : &#123;&#125;, <span class="comment">// only works under multi-user mode</span></span><br><span class="line">    <span class="attr">"additional_ports_only"</span> : <span class="literal">false</span>, <span class="comment">// only works under multi-user mode</span></span><br><span class="line">    <span class="attr">"timeout"</span>: <span class="number">120</span>,</span><br><span class="line">    <span class="attr">"udp_timeout"</span>: <span class="number">60</span>,</span><br><span class="line">    <span class="attr">"dns_ipv6"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"connect_verbose_info"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"redirect"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改后面有备注的几项即可</p>
<h2 id="通过命令行即可使用-SSR"><a href="#通过命令行即可使用-SSR" class="headerlink" title="通过命令行即可使用 SSR"></a>通过命令行即可使用 SSR</h2><p>首先你需要安装 <code>python</code>，一般Linux系统都会预装，如果出现不能运行的错误，自行 <code>google</code> 即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo python ./shadowsocks/local.py -c config.json -d start <span class="comment"># 启动</span></span><br><span class="line">sudo python ./shadowsocks/local.py -c config.json -d stop  <span class="comment"># 停止</span></span><br></pre></td></tr></table></figure>
<p>到这一步，你是不是以及迫不及待的打开浏览器准备畅想网络世界？<br>其实并不是，<code>Linux</code> 网络配置问题比较复杂，不像在 <code>Windows</code> 下一样，点开即可使用，比如 <code>chrome</code> 浏览器中就需要插件才能遨游世界</p>
<h2 id="chrome-中使用-SSR"><a href="#chrome-中使用-SSR" class="headerlink" title="chrome 中使用 SSR"></a>chrome 中使用 SSR</h2><p>首先，你需要安装一款插件 <code>Proxy SwitchyOmega</code>，<a href="https://github.com/FelisCatus/SwitchyOmega/releases" target="_blank" rel="noopener">下载地址</a><br>如果你是在 <code>chrome</code> 中直接安装可跳过下面手动安装的步骤</p>
<h3 id="手动在-chrome-中安装插件"><a href="#手动在-chrome-中安装插件" class="headerlink" title="手动在 chrome 中安装插件"></a>手动在 chrome 中安装插件</h3><ol>
<li>点开 右上角三个点 &gt; 更多工具 &gt; 扩展程序</li>
<li>在扩展程序界面右上角打开开发者模式</li>
<li>将刚才下载好的 <code>.crx</code> 文件直接拖进浏览器即可</li>
<li>其他插件的安装也是如此</li>
</ol>
<h3 id="修改-Proxy-SwitchyOmega-配置"><a href="#修改-Proxy-SwitchyOmega-配置" class="headerlink" title="修改 Proxy SwitchyOmega 配置"></a>修改 Proxy SwitchyOmega 配置</h3><ol>
<li>点开右上角刚刚安装好的插件 &gt; 选项</li>
<li>将情景模式中 <code>proxy</code>的代理协议更改为 <code>sock5</code>，代理服务器 <code>127.0.0.1</code>，端口 <code>1080</code></li>
<li>如果你想所有网页都通过 <code>SSR</code> 的流量，在插件中选择 <code>proxy</code>即可，如果你的机场流量不多的话建议选择 <code>Auto Switch</code></li>
<li>当然，你可以修改 <code>Auto Switch</code>的规则，使其更好的为你服务</li>
</ol>
<h2 id="让-Linux-终端里的命令使用-SSR"><a href="#让-Linux-终端里的命令使用-SSR" class="headerlink" title="让 Linux 终端里的命令使用 SSR"></a>让 Linux 终端里的命令使用 SSR</h2><p>安装完 <code>shadowsock</code>后，你会发现你使用 <code>wget</code>，或者没有更换镜像源的 <code>pip</code>时，速度并没有加快<br>这是因为 <code>shadowsock</code>的流量都走的是本地 <code>1080</code> 端口，而你使用的命令并没有通过端口转发<br>这时我们就需要一个特殊的工具 <code>proxychains</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install proxychains</span><br></pre></td></tr></table></figure>
<p>安装完成后，修改配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/proxychains.conf</span><br><span class="line"><span class="comment">## 修改最后一行</span></span><br><span class="line">socks5  127.0.0.1 1080</span><br><span class="line"><span class="comment">## 保存退出</span></span><br></pre></td></tr></table></figure>
<p>这时候，你再使用 <code>wget</code>或者其他命令时，只需在前面加上 <code>proxychains</code>，就可以享受代理带来的乐趣咯</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxychains wget www.google.com</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>ssr</tag>
        <tag>酸酸乳</tag>
        <tag>技术饭</tag>
      </tags>
  </entry>
  <entry>
    <title>开始搭建你自己的hexo</title>
    <url>/2020/04/25/startHexo/</url>
    <content><![CDATA[<p>一些简单的hexo命令</p>
<a id="more"></a>

<h2 id="学习搭建自己的hexo博客"><a href="#学习搭建自己的hexo博客" class="headerlink" title="学习搭建自己的hexo博客"></a>学习搭建自己的hexo博客</h2><h3 id="上传文章"><a href="#上传文章" class="headerlink" title="上传文章"></a>上传文章</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="启动hexo服务"><a href="#启动hexo服务" class="headerlink" title="启动hexo服务"></a>启动hexo服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="更新静态页面"><a href="#更新静态页面" class="headerlink" title="更新静态页面"></a>更新静态页面</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<h3 id="上传到码云"><a href="#上传到码云" class="headerlink" title="上传到码云"></a>上传到码云</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>技术博客</category>
      </categories>
      <tags>
        <tag>技术饭</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
